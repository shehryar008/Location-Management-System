name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - run: dotnet restore
      - run: dotnet test --no-restore
      - run: dotnet publish -c Release -o published
      - uses: actions/upload-artifact@v4
        with:
          name: drop
          path: published/

  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/locationcrud-app:latest

  deploy-local:
    needs: build-and-push-image
    runs-on: [ self-hosted, local ]

    steps:
      - uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest image
        run: docker pull ghcr.io/${{ github.repository_owner }}/locationcrud-app:latest

      - name: Stop & remove existing container
        run: docker rm -f locationcrud-app
        continue-on-error: true

      - name: Run container on localhost:5000
        shell: bash
        run: |
          docker run -d \
            --name locationcrud-app \
            -p 5000:80 \
            ghcr.io/${{ github.repository_owner }}/locationcrud-app:latest

      - name: Smoke-test HTTP endpoint
        shell: bash
        run: |
          echo "Waiting for container to be up..."
          for i in $(seq 1 10); do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:5000 | grep -q "200"; then
              echo "➜ Application is responding!"
              exit 0
            fi
            echo "Waiting... ($i/10)"
            sleep 3
          done
          echo "❌ Application did not respond in time."
          exit 1
